---
- name: Setup and run Mastodon on the instances
  hosts: instance
  tasks:
    # todo monitoring
    # (continuos) vmstat --unit M --one-header --timestamp 5
    - name: Install vmstat service
      copy:
        src: vmstat.service
        dest: .config/systemd/user/
    # iostat -c 5
    - name: Install iostat-cpu service
      copy:
        src: iostat-cpu.service
        dest: .config/systemd/user/
    # iostat -mdN sda 5
    - name: Install iostat-disk service
      copy:
        src: iostat-disk.service
        dest: .config/systemd/user/
    # mpstat -P ALL 5
    - name: Install mpstat service
      copy:
        src: mpstat.service
        dest: .config/systemd/user/
    # (systemd timer) docker stats --no-stream
    - name: Install docker-stats service
      copy:
        src: docker-stats.service
        dest: .config/systemd/user/
    - name: Install docker-stats timer
      copy:
        src: docker-stats.timer
        dest: .config/systemd/user/
    # (maybe?) netstat --continuous --tcp --udp
    # todo add users based on config
    - name: Add util scripts
      copy:
        src: scripts/
        dest: .
        local_follow: true

    - name: Create Mastodon admin user
      command:
        cmd: sh createAdminUser.sh
      args:
        creates: admin.txt
    - name: Create Mastodon users
      command:
        cmd: sh createUser.sh 10
      args:
        creates: users.txt

    - name: Collect user credentials
      fetch:
        src: users.txt
        dest: users/

- name: Setup clients
  hosts: client
  tasks:

    - name: Distribute app dependencies
      copy:
        src: lib
        dest: app/
        local_follow: true

    - name: Distribute app
      copy:
        src: client.jar
        dest: app/client.jar
        local_follow: true

    - name: Install app service
      copy:
        src: tootbench.service
        dest: .config/systemd/user/

    - name: Distribute user credentials
      copy:
        src: users
        dest: ./
      # todo: if multiple clients, then split files by number of clients

    # todo start client (and thus Benchmark)
    # todo wait for specified time OR setup a systemd timer on the client stopping the client and sending a ntfy
    # todo stop clients & benchmark --> stop.yml playbook
