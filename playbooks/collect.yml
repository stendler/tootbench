---
- hosts: localhost
  gather_facts: true
  tasks:
    - name: Get current timestamp
      set_fact:
        timestamp: >-
          {{ ansible_date_time.year }}-{{
          ansible_date_time.month }}-{{ ansible_date_time.day }}T{{
          ansible_date_time.hour }}:{{ ansible_date_time.minute }}:{{
          ansible_date_time.second }}
        run_once: true
        cachable: yes

- name: Write monitoring logs
  hosts: all
  vars:
    # set defaults but should be overwritten via --extra-vars
    scenario: "no_scenario"
    current_rep: "1"
  tasks:
    - name: Cached timestamp
      set_fact:
        timestamp: "{{ hostvars['localhost']['timestamp'] }}"
        cacheable: yes
    - name: Determine output directory
      set_fact:
        outputdir: "logs/{{ timestamp }}/{{ scenario }}/{{ current_rep }}/{{ inventory_hostname }}/"
    - name: Create log folder
      shell: "mkdir -p {{ outputdir }}"
    - name: Write vmstat service monitoring log
      shell: "journalctl -u vmstat -o short-unix | gzip > {{ outputdir }}/vmstat.log.gz"
    - name: Write iostat cpu service monitoring log
      shell: "journalctl -u iostat-cpu -o short-unix | gzip > {{ outputdir }}/iostat-cpu.log.gz"
    - name: Write iostat disk service monitoring log
      shell: "journalctl -u iostat-disk -o short-unix | gzip > {{ outputdir }}/iostat-disk.log.gz"
    - name: Write mpstat service monitoring log
      shell: "journalctl -u mpstat -o short-unix | gzip > {{ outputdir }}/mpstat.log.gz"
    - name: Write docker stats service monitoring log
      shell: "journalctl -u docker-stats -o short-unix | gzip > {{ outputdir }}/docker-stats.log.gz"
    - name: Write ping service monitoring log
      shell: "journalctl -u ping@* -o short-unix | gzip > {{ outputdir }}/ping.log.gz"
    - name: Collect logs
      synchronize:
        mode: pull
        src: logs/
        dest: logs/

- name: Collect Tootbench Benchmark log
  hosts: clients
  tasks:
    - name: gzip log
      shell: "gzip tootbench.log"
    - name: Collect tootbench client log
      fetch:
        src: tootbench.log.gz
        dest: "{{ outputdir }}/"
        flat: true
